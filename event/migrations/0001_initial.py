# Generated by Django 3.2 on 2021-04-09 09:41

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False, verbose_name='id')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('title', models.CharField(max_length=64, verbose_name='title')),
                ('description', models.CharField(blank=True, max_length=4096, verbose_name='description')),
                ('timezone', models.CharField(default='UTC', max_length=32, verbose_name='timezone')),
                ('optional', models.BooleanField(default=False, verbose_name='optional')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='events', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Option',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False, verbose_name='id')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('start_at', models.DateTimeField(verbose_name='start at')),
                ('finish_at', models.DateTimeField(verbose_name='start at')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='options', to='event.event')),
                ('voters', models.ManyToManyField(related_name='votes', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
